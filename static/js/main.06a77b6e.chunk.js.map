{"version":3,"sources":["components/Home.js","components/TV.js","components/Work.js","components/Profile.js","components/Skill.js","components/About.js","components/App.js","components/serviceWorker.js","index.js"],"names":["Home","className","src","process","alt","width","height","works","id","name","content","url","image","maxWorkId","length","Thumbnail","props","onClick","setCurrentWorkId","work","ThumbnailList","worksList","map","key","TV","useState","currentWorkId","href","Work","React","Component","links","Profile","link","skills","Skill","skill","About","routes","path","App","route","to","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","Boolean","window","location","hostname","root","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.06a77b6e.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Home.css';\n\nfunction Home() {\n  return (\n    <div className='home wrapper'>\n      <section className='home-section'>\n        <h1 className='page-title'>\n          <span>hello!</span>\n        </h1>\n        <div className='home-section__icon'>\n          <img\n            src={`${process.env.PUBLIC_URL}/breadclip-logo.svg`}\n            alt='icon'\n            width='128px'\n            height='128px'\n          />\n        </div>\n        <p>ごらいほう ありがとうございます。</p>\n        <p>Thank you for your coming!</p>\n        <p>(c) 2020 A.Arimura</p>\n      </section>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport '../css/TV.css';\n\nconst works = [\n  {\n    id: 0,\n    name: 'Portfolio Web Site',\n    content: <p>Here is made with React.js.</p>,\n    url: 'https://github.com/wasshoy/',\n    image: 'pic00.png',\n  },\n  {\n    id: 1,\n    name: 'Start Saving Energy Today.',\n    content: (\n      <p>\n        I designed this poster for a public offering in Kyushu Univ, and it was\n        adopted.\n      </p>\n    ),\n    url: 'https://www.kyushu-u.ac.jp/ja/university/approach/syoene01/',\n    image: 'pic01.png',\n  },\n  {\n    id: 2,\n    name: 'Portfolio site (old)',\n    content: <p>My first portfolio site.</p>,\n    url: 'https://github.com/wasshoy/old-portfolio',\n    image: 'pic02.png',\n  },\n  {\n    id: 3,\n    name: 'Portfolio site (old)',\n    content: <p>My second portfolio site.</p>,\n    url: 'https://github.com/wasshoy/old-portfolio-2',\n    image: 'pic03.png',\n  },\n];\nconst maxWorkId = works.length - 1;\n\nfunction Thumbnail(props) {\n  return (\n    <li\n      className='thumbnail'\n      onClick={() => {\n        props.setCurrentWorkId(props.work.id);\n      }}\n    >\n      <span>\n        <img\n          className='thumbnail__image'\n          src={`${process.env.PUBLIC_URL}/img/${props.work.image}`}\n          alt='thumbnail'\n        />\n      </span>\n    </li>\n  );\n}\n\nfunction ThumbnailList(props) {\n  const worksList = works.map((work) => {\n    return (\n      <Thumbnail\n        work={work}\n        key={work.id}\n        setCurrentWorkId={props.setCurrentWorkId}\n      />\n    );\n  });\n  return <ul className='TV-app__thumbnails'>{worksList}</ul>;\n}\n\nfunction TV() {\n  const [currentWorkId, setCurrentWorkId] = useState(0);\n  return (\n    <div className='TV-app'>\n      <div className='TV-app__tv'>\n        <div className='TV-app__tv__body'>\n          <div className='TV-app__tv__body__screen'>\n            <a href={works[currentWorkId].url}>\n              <img\n                className='TV-app__tv__body__screen__image'\n                src={`${process.env.PUBLIC_URL}/img/${works[currentWorkId].image}`}\n                alt='tv-screen'\n              />\n            </a>\n          </div>\n          <div className='TV-app__tv__dial-btns'>\n            <ul>\n              <li>\n                <button\n                  className='button prev-btn'\n                  onClick={() =>\n                    setCurrentWorkId(\n                      currentWorkId !== 0 ? currentWorkId - 1 : maxWorkId\n                    )\n                  }\n                >\n                  &lt;\n                </button>\n              </li>\n              <li>\n                <button\n                  className='button next-btn'\n                  onClick={() =>\n                    setCurrentWorkId(\n                      currentWorkId !== maxWorkId ? currentWorkId + 1 : 0\n                    )\n                  }\n                >\n                  &nbsp;&gt;\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className='TV-app__tv__description'>\n        <h4 className='TV-app__tv__description__title'>\n          {works[currentWorkId].name}\n        </h4>\n        {works[currentWorkId].content}\n      </div>\n      <ThumbnailList setCurrentWorkId={setCurrentWorkId} />\n    </div>\n  );\n}\n\nexport default TV;\n","import React from 'react';\nimport TV from './TV';\nimport '../css/Work.css';\n\nclass Work extends React.Component {\n  render() {\n    return (\n      <div className='wrapper'>\n        <h1 className='page-title'>\n          <span>work</span>\n        </h1>\n        <section className='tv-wrapper'>\n          <TV />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import React from 'react';\nimport '../css/Profile.css';\n\nconst links = [\n  { name: 'GitHub', url: 'https://github.com/wasshoy/' },\n  { name: 'Twitter', url: 'https://twitter.com/wasshoy_wasshoy/' },\n  { name: 'CodePen', url: 'https://codepen.io/wasshoy' },\n  { name: 'pixilart', url: 'https://www.pixilart.com/wasshoy/gallery' },\n];\nfunction Profile() {\n  return (\n    <section className='about__profile'>\n      <div className='about__profile__title'>\n        <img\n          className='about__profile__icon'\n          src={`${process.env.PUBLIC_URL}/breadclip-logo.svg`}\n          alt='icon'\n          width='64px'\n          height='64px'\n        />\n        <span className='about__profile__title__name'>Atsuhiro Arimura</span>\n      </div>\n      <hr className='separator' />\n      <section className='about__profile__text'>\n        <div className='about__profile__text__content'>\n          <p className='about__profile__text__content__subtitle'>History</p>\n          <table className='about__profile__text__content__table'>\n            <tbody>\n              <tr>\n                <td>2019-</td>\n                <td>Kyushu University, Japan, Infomation Science</td>\n              </tr>\n              <tr>\n                <td>2015-2019</td>\n                <td>Kyushu University, Japan, Computer Science</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className='about__profile__text__content'>\n          <p className='about__profile__text__content__subtitle'>Links</p>\n          <ul className='about__profile__text__content__links'>\n            {links.map((link) => (\n              <li key={link.name}>\n                <a href={link.url}>{link.name}</a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </section>\n    </section>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport '../css/Skill.css';\n\nconst skills = [\n  { name: 'Python', image: 'python.svg' },\n  { name: 'HTML', image: 'html-5.svg' },\n  { name: 'CSS', image: 'css-3.svg' },\n  { name: 'SCSS', image: 'sass.svg' },\n  { name: 'JavaScript', image: 'javascript.svg' },\n  { name: 'PostgreSQL', image: 'postgresql.svg' },\n  { name: 'c', image: 'c.svg' },\n  { name: 'React.js', image: 'react.svg' },\n  { name: 'django', image: 'django.svg' },\n];\n\nfunction Skill() {\n  return (\n    <section className='about__skill'>\n      <div className='about__skill__title'>\n        <img\n          className='about__skill__icon'\n          src={`${process.env.PUBLIC_URL}/breadclip-logo.svg`}\n          alt='icon'\n          width='64px'\n          height='64px'\n        />\n        <span className='about__skill__title__text'>Skills</span>\n        <hr className='separator' />\n      </div>\n      <div className='about__skill__skills'>\n        {skills.map((skill) => (\n          <img\n            key={skill.name}\n            name={skill.name}\n            className='about__skill__skills__skill-icon'\n            src={`${process.env.PUBLIC_URL}/img/${skill.image}`}\n            alt={`${skill.name}-icon`}\n            width='48px'\n            height='48px'\n          />\n        ))}\n      </div>\n    </section>\n  );\n}\n\nexport default Skill;\n","import React from 'react';\nimport Profile from './Profile';\nimport Skill from './Skill';\nimport '../css/About.css';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className='about wrapper'>\n        <h1 className='page-title'>\n          <span>about</span>\n        </h1>\n        <Profile />\n        <Skill />\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Home from './Home';\nimport Work from './Work';\nimport About from './About';\nimport '../css/destyle.css';\nimport '../css/App.css';\nimport '../css/Apptransitions.css';\n\nconst routes = [\n  { path: '/', name: 'home', Component: Home },\n  { path: '/work', name: 'work', Component: Work },\n  { path: '/about', name: 'about', Component: About },\n];\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <nav className='nav'>\n          {routes.map((route) => (\n            <Link key={route.path} to={route.path} className='nav__menu'>\n              {route.name}\n            </Link>\n          ))}\n        </nav>\n        <div className='container'>\n          {routes.map(({ path, Component }) => (\n            <Route key={path} exact path={path}>\n              {({ match }) => (\n                <CSSTransition\n                  in={match != null}\n                  timeout={800}\n                  classNames='content'\n                  unmountOnExit\n                >\n                  <div className='content'>\n                    <Component />\n                  </div>\n                </CSSTransition>\n              )}\n            </Route>\n          ))}\n        </div>\n      </Router>\n      {/* <footer>\n        <span>(c) 2020 wasshoy</span>\n      </footer> */}\n    </div>\n  );\n}\n\n// function App() {\n//   return (\n//     <div className='App'>\n//       <Router>\n//         <Navbar />\n//         <Routers />\n//       </Router>\n//       <footer>\n//         <span>(c) 2020 wasshoy</span>\n//       </footer>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './components/serviceWorker';\n\nconst root = document.getElementById('root');\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}